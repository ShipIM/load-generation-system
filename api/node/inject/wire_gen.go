// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"context"
	"github.com/urfave/cli/v2"
	"load-generation-system/api/node"
	"load-generation-system/api/node/rest/handlers"
	"load-generation-system/pkg/rest"
)

// Injectors from wire.go:

func InitializeNode(c *cli.Context, appCtx context.Context) (api.NodeContainer, error) {
	managerConn, err := provideManagerConnection(c)
	if err != nil {
		return api.NodeContainer{}, err
	}
	attackClient := provideManagerClient(managerConn)
	config := provideGeneratorConfig(c)
	attackGateway := provideAttackGateway(c, attackClient, config)
	restConfig := provideNodeServerConfig(c)
	server := rest.New(restConfig)
	resolver := handlers.NewResolver(server)
	grpcConn, err := provideNodeGRPCConnection(c)
	if err != nil {
		return api.NodeContainer{}, err
	}
	nodeContainer := api.NewNodeContainer(attackGateway, server, resolver, managerConn, grpcConn)
	return nodeContainer, nil
}
