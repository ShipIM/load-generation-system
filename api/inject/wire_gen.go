// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"context"
	"github.com/urfave/cli/v2"
	"load-generation-system/api"
	handlers2 "load-generation-system/api/grpc/handlers"
	"load-generation-system/api/rest/manager/handlers"
	"load-generation-system/pkg/grpc/server"
	"load-generation-system/pkg/rest"
)

// Injectors from wire.go:

func InitializeManager(c *cli.Context, appCtx context.Context) (api.ManagerContainer, error) {
	config := provideManagerServerConfig(c)
	restServer := rest.New(config)
	attackService := provideAttackService(c)
	resolver := handlers.NewResolver(restServer, attackService)
	serverConfig := provideManagerGRPCConfig(c)
	serverServer := server.New(appCtx, serverConfig)
	service := provideManagerService(c, attackService)
	handlersResolver := handlers2.NewResolver(serverServer, service)
	managerContainer := api.NewManagerContainer(restServer, resolver, handlersResolver)
	return managerContainer, nil
}
