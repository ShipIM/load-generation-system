syntax = "proto3";

package load_generation_system_v1;

service Attack {
  rpc StreamAttack (stream AttackRequest) returns (stream AttackResponse);
}

message AttackRequest {
  oneof request {
    Handshake handshake = 1;
    Acknowledge acknowledge = 2;
  }
}

message Handshake {  
  string node_name = 1;
  repeated Scenario scenarios = 2;
}

message Scenario {
  string name = 1;
  string description = 2;
}

message Acknowledge {
  // No fields required for the acknowledge
}

message AttackResponse {
  oneof response {
    OperationStart start = 1;
    OperationStop stop = 2;
    OperationKill kill = 3;
  }
}

message OperationStart {
  string id = 1;
  int64 attack_id = 2;
  int64 increment_id = 3;
  float wait_time_sec = 4;
  map<string, int64> scenarios = 5;
}

message OperationStop {
  int64 attack_id = 1;
  optional int64 increment_id = 2;
}

message OperationKill {
  // No fields required for the kill operation
}
